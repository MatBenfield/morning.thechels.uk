name: 'Update json'
on:
  issues:
    types: [labeled]
  workflow_dispatch:

env:
  content: ${{ github.event.issue.body }}
  label: ${{ github.event.label.name }}
  issue_number : ${{ github.event.issue.number }}

jobs:
  status:
    name: setup checker
    runs-on: ubuntu-latest
    steps:
    - name: label check
      id: label_check
      if: github.event.label.name not in ('stocks','quotes','websites')
      run: exit 1
    - name: check permission failed
      id: actor_check
      if: github.actor != github.event.repository.owner.login
      run: exit 1
    - name: Comment on permission check fail
      if: (failure() && github.event.label.name not in ('stocks','quotes','websites')
      uses: actions/github-script@0.5.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':warning: Attempt triggered by @' + context.actor + ' who is not the repository owner. `${{ github.event.label.name }}` stopped.'
            })
    - name: Remove label on permission check fail
      if: (failure()) && github.event.label.name in ('stocks','quotes','websites')
      uses: actions/github-script@0.5.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':x: Attempt triggered by @' + context.actor + ' who is not the repository owner. `${{ github.event.label.name }}` stopped.'
            })
            github.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: '${{ github.event.label.name }}',
            })
    - name: Positive permission action
      if: (success() && github.event.label.name in ('stocks','quotes','websites'))
      run: echo success path
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: python -m pip install -r requirements.txt
    - name: Check for new content
      run: python 'python/updater.py'
    - name: Commit and push changes
      run: |-
          git diff
          git config --global user.email "ngenerator-bot@example.com"
          git config --global user.name "generator-bot"
          git diff --quiet || (git add -A && git commit -m "Updated json file")
          git push
    - name: Update issue
      uses: actions/github-script@0.5.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ @' + context.actor + ', approval granted, updating file ...'
            })
            github.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: '${{ github.event.label.name }}',
            })
    - name: Close issue
      uses: peter-evans/close-issue@v1
      with:
        issue-number: ${{ github.event.issue.number }}
        comment: "Auto-closing this issue."
        token: ${{ secrets.GITHUB_TOKEN }}

  always_job:
    name: Always run job
    runs-on: ubuntu-latest
    steps:
      - name: Always run
        run: echo "This job is used to prevent the workflow status from showing as failed when all other jobs are skipped."